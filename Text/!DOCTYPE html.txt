<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Save Money ‚Äì Mockup (Flexible Duration + Deduction Plan)</title>
  <style>
    :root{--bg:#0f1220;--card:#151935;--muted:#8b90b2;--text:#eef0ff;--primary:#7c8cff;--primary-2:#57d7ff;--green:#4ade80;--red:#ef4444;--border:#22274a;--accent:#1b2150;--shadow:0 10px 24px rgba(0,0,0,.35);--radius:18px}
    *{box-sizing:border-box}
    html,body{height:100%}
    body{margin:0;font-family:system-ui,-apple-system, Segoe UI, Roboto, "Noto Sans Thai", sans-serif;background:linear-gradient(180deg,#0b0e1a 0%,#111736 100%);color:var(--text)}
    .container{max-width:980px;margin:0 auto;padding:24px 16px 56px}
    header{display:flex;align-items:center;justify-content:space-between;gap:12px;margin-bottom:18px}
    .title{display:flex;align-items:center;gap:12px}
    .title h1{font-size:22px;margin:0}
    .subtitle{color:var(--muted);font-size:13px}
    .btn{background:linear-gradient(135deg,var(--primary),var(--primary-2));color:#0a0d22;border:0;padding:10px 14px;border-radius:12px;font-weight:700;cursor:pointer;box-shadow:var(--shadow)}
    .btn:active{transform:translateY(1px)}
    .btn.ghost{background:transparent;color:var(--text);border:1px solid var(--border)}

    .summary{background:linear-gradient(180deg,#111735,#0f1430);border:1px solid var(--border);border-radius:var(--radius);padding:14px 16px;display:flex;align-items:center;justify-content:space-between;gap:8px;position:sticky;top:0;z-index:5;backdrop-filter: blur(6px)}
    .summary .kpi{display:flex;gap:14px;align-items:center}
    .chip{background:var(--accent);padding:6px 10px;border-radius:999px;font-size:12px;color:var(--muted);border:1px solid var(--border)}

    .grid{display:grid;gap:16px;grid-template-columns:repeat(1,minmax(0,1fr));margin-top:16px}
    @media(min-width:640px){.grid{grid-template-columns:repeat(2,minmax(0,1fr));}}
    @media(min-width:980px){.grid{grid-template-columns:repeat(3,minmax(0,1fr));}}
    .card{background:linear-gradient(180deg,#121837,#0f1430);border:1px solid var(--border);border-radius:var(--radius);padding:16px;box-shadow:var(--shadow);display:flex;flex-direction:column;gap:12px;cursor:pointer}
    .row{display:flex;align-items:center;justify-content:space-between;gap:12px}
    .goal-title{font-weight:700;font-size:15px;margin:0}
    .muted{color:var(--muted);font-size:12px}
    .progress{height:10px;background:#0c1130;border:1px solid var(--border);border-radius:999px;overflow:hidden}
    .bar{height:100%;background:linear-gradient(90deg,var(--green),var(--primary-2));width:40%}
    .actions{display:flex;gap:8px}
    .ghost{background:transparent;border:1px solid var(--border);color:var(--text);padding:8px 10px;border-radius:10px;cursor:pointer}
    .ghost.danger{border-color:#3a1f26;color:#ffb3b3}
    footer{margin-top:40px;color:var(--muted);font-size:12px;text-align:center}

    dialog{width:min(620px,92vw);border:1px solid var(--border);border-radius:20px;padding:0;background:#0f1430;color:var(--text);box-shadow:var(--shadow)}
    .modal-head{padding:16px;border-bottom:1px solid var(--border);display:flex;align-items:center;justify-content:space-between}
    .modal-body{padding:16px;display:grid;gap:12px}
    .modal-foot{padding:16px;border-top:1px solid var(--border);display:flex;justify-content:flex-end;gap:8px}
    label{font-size:13px;color:var(--muted)}
    input,select,textarea{width:100%;background:#0b1029;border:1px solid var(--border);color:var(--text);padding:10px 12px;border-radius:12px;outline:none}
    input:focus,select:focus,textarea:focus{border-color:#2f6aff}
    .radio-row{display:flex;gap:10px;flex-wrap:wrap}
    .radio{display:flex;align-items:center;gap:8px;padding:10px 12px;border:1px solid var(--border);border-radius:12px;cursor:pointer;background:#0b1029}
    .radio input{accent-color:#5aa0ff}
    .hidden{display:none}

    .drawer{position:fixed;inset:auto 0 0 auto;right:0;top:0;height:100%;width:min(560px,92vw);background:#0f1430;border-left:1px solid var(--border);box-shadow:-12px 0 24px rgba(0,0,0,.35);transform:translateX(100%);transition:transform .25s ease;z-index:50;display:flex;flex-direction:column}
    .drawer.open{transform:translateX(0)}
    .drawer-head{display:flex;align-items:center;justify-content:space-between;padding:16px;border-bottom:1px solid var(--border)}
    .drawer-body{padding:16px;overflow:auto;display:grid;gap:12px}
    .kv{display:grid;grid-template-columns:160px 1fr;gap:8px;font-size:13px}
    .pill{display:inline-block;background:var(--accent);border:1px solid var(--border);padding:4px 8px;border-radius:999px;font-size:12px;color:var(--muted)}
    .tip{background:#1b2150;border-left:4px solid var(--primary-2);padding:10px 12px;border-radius:10px;color:#cfd4ff}
    .drawer-foot{padding:16px;border-top:1px solid var(--border);display:flex;gap:8px;justify-content:flex-end;background:#0f1430;position:sticky;bottom:0}
  </style>
</head>
<body>
  <div class="container">
    <header>
      <div class="title">
        <svg width="28" height="28" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 3C7.03 3 3 7.03 3 12s4.03 9 9 9 9-4.03 9-9S16.97 3 12 3Zm0 2c3.86 0 7 3.14 7 7 0 1.55-.51 2.98-1.36 4.12l-2.24-2.24c.39-.56.6-1.23.6-1.96a4 4 0 1 0-4 4c.73 0 1.4-.21 1.96-.6l2.24 2.24A6.96 6.96 0 0 1 12 19c-3.86 0-7-3.14-7-7s3.14-7 7-7Z" fill="currentColor"/></svg>
        <div>
          <h1>My Saving Goals</h1>
          <div class="subtitle">‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏≠‡∏≠‡∏°‡πÄ‡∏á‡∏¥‡∏ô ‡πÄ‡∏´‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏î‡∏≤</div>
        </div>
      </div>
      <button class="btn" id="openCreate">+ Create Goal</button>
    </header>

    <section class="summary">
      <div class="kpi">
        <div class="chip">‡∏£‡∏ß‡∏° 3 ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢</div>
        <div class="chip">‡∏≠‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß 12,400 / 30,000 ‡∏ö‡∏≤‡∏ó</div>
        <div class="chip">‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏£‡∏ß‡∏° ~ 41%</div>
      </div>
      <div class="muted">‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏≠‡∏µ‡∏Å 13 ‡∏ß‡∏±‡∏ô</div>
    </section>

    <section class="grid" id="goalGrid">
      <article class="card" data-name="‡∏ó‡∏£‡∏¥‡∏õ‡∏ó‡∏∞‡πÄ‡∏•‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï" data-saved="6000" data-target="15000" data-duration="2" data-unit="month" data-plan="‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô" data-perperiod="7500" data-perday="125" data-progress="40" data-investmode="none">
        <div class="row">
          <div style="display:flex;align-items:center;gap:10px">
            <div style="font-size:22px">üèñÔ∏è</div>
            <div>
              <p class="goal-title">‡∏ó‡∏£‡∏¥‡∏õ‡∏ó‡∏∞‡πÄ‡∏•‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï</p>
              <div class="muted card-sub">‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏•‡πâ‡∏ß 6,000 / 15,000 ‡∏ö‡∏≤‡∏ó ‚Ä¢ ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 2 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</div>
            </div>
          </div>
          <div class="actions">
            <button class="ghost edit-btn" data-action="edit">Edit</button>
            <button class="ghost danger" data-action="delete">Delete</button>
          </div>
        </div>
        <div class="progress"><div class="bar" style="width:40%"></div></div>
        <div class="row">
          <div class="muted">‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏°‡∏ó‡∏∏‡∏Å: ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‚Ä¢ ~ 3,000 ‡∏ö‡∏≤‡∏ó/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</div>
          <div class="muted">‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì ~ 125 ‡∏ö‡∏≤‡∏ó/‡∏ß‡∏±‡∏ô</div>
        </div>
      </article>

      <article class="card" data-name="‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡πÉ‡∏´‡∏°‡πà" data-saved="3400" data-target="10000" data-duration="4" data-unit="week" data-plan="‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô" data-perperiod="1650" data-perday="237" data-progress="34" data-investmode="none">
        <div class="row">
          <div style="display:flex;align-items:center;gap:10px">
            <div style="font-size:22px">üì±</div>
            <div>
              <p class="goal-title">‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡πÉ‡∏´‡∏°‡πà</p>
              <div class="muted card-sub">‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏•‡πâ‡∏ß 3,400 / 10,000 ‡∏ö‡∏≤‡∏ó ‚Ä¢ ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 4 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</div>
            </div>
          </div>
          <div class="actions">
            <button class="ghost edit-btn" data-action="edit">Edit</button>
            <button class="ghost danger" data-action="delete">Delete</button>
          </div>
        </div>
        <div class="progress"><div class="bar" style="width:34%"></div></div>
        <div class="row">
          <div class="muted">‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏°‡∏ó‡∏∏‡∏Å: ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå ‚Ä¢ ~ 1,650 ‡∏ö‡∏≤‡∏ó/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</div>
          <div class="muted">‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì ~ 237 ‡∏ö‡∏≤‡∏ó/‡∏ß‡∏±‡∏ô</div>
        </div>
      </article>

      <article class="card" data-name="‡∏Ñ‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏°" data-saved="3000" data-target="5000" data-duration="20" data-unit="day" data-plan="‡∏•‡∏á‡∏ó‡∏∏‡∏ô" data-perperiod="100" data-perday="100" data-progress="60" data-investmode="recommend">
        <div class="row">
          <div style="display:flex;align-items:center;gap:10px">
            <div style="font-size:22px">üìà</div>
            <div>
              <p class="goal-title">‡∏Ñ‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏°</p>
              <div class="muted card-sub">‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏•‡πâ‡∏ß 3,000 / 5,000 ‡∏ö‡∏≤‡∏ó ‚Ä¢ ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ 20 ‡∏ß‡∏±‡∏ô</div>
            </div>
          </div>
          <div class="actions">
            <button class="ghost edit-btn" data-action="edit">Edit</button>
            <button class="ghost danger" data-action="delete">Delete</button>
          </div>
        </div>
        <div class="progress"><div class="bar" style="width:60%"></div></div>
        <div class="row">
          <div class="muted">‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏°‡∏ó‡∏∏‡∏Å: ‡∏ß‡∏±‡∏ô ‚Ä¢ ~ 100 ‡∏ö‡∏≤‡∏ó/‡∏ß‡∏±‡∏ô</div>
          <div class="muted">‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì ~ 100 ‡∏ö‡∏≤‡∏ó/‡∏ß‡∏±‡∏ô</div>
        </div>
      </article>

    </section>

    <footer>Mockup UI ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô Static HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏î‡πÇ‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏°‡πÄ‡∏á‡∏¥‡∏ô ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏ö‡∏ö ‡∏ß‡∏±‡∏ô/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô/‡∏õ‡∏µ ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤</footer>
  </div>

  <!-- Create Goal Modal -->
  <dialog id="createModal">
    <div class="modal-head">
      <strong>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏≠‡∏≠‡∏°‡πÄ‡∏á‡∏¥‡∏ô</strong>
      <button class="ghost" id="closeCreate">‡∏õ‡∏¥‡∏î</button>
    </div>
    <form method="dialog" class="modal-body" id="goalForm">
      <div>
        <label for="goalName">‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢</label>
        <input id="goalName" placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ó‡∏£‡∏¥‡∏õ‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô / ‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô" required />
      </div>
      <div class="row" style="gap:12px">
        <div style="flex:1">
          <label for="goalAmount">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö (‡∏ö‡∏≤‡∏ó)</label>
          <input id="goalAmount" type="number" min="0" placeholder="10000" required />
        </div>
        <div style="flex:1">
          <label>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤</label>
          <div class="row" style="gap:8px">
            <input id="goalDuration" type="number" min="1" placeholder="‡πÄ‡∏ä‡πà‡∏ô 3" style="flex:1" />
            <select id="goalUnit" style="flex:1">
              <option value="day">‡∏ß‡∏±‡∏ô</option>
              <option value="week">‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</option>
              <option value="month" selected>‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</option>
              <option value="year">‡∏õ‡∏µ</option>
            </select>
          </div>
        </div>
      </div>
      <div>
        <label>‡πÅ‡∏ú‡∏ô</label>
        <div class="radio-row" id="planRow">
          <label class="radio"><input type="radio" name="plan" value="‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô" checked /> ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô</label>
          <label class="radio"><input type="radio" name="plan" value="‡∏•‡∏á‡∏ó‡∏∏‡∏ô" /> ‡∏•‡∏á‡∏ó‡∏∏‡∏ô (‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô)</label>
        </div>
        <div class="hint">‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÇ‡∏î‡∏¢‡∏≠‡∏¥‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤</div>
      </div>

      <div id="investChoice" class="hidden">
        <label>‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ú‡∏ô‡∏•‡∏á‡∏ó‡∏∏‡∏ô ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£?</label>
        <div class="radio-row">
          <label class="radio"><input type="radio" name="investMode" value="recommend" checked /> ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏´‡∏∏‡πâ‡∏ô/‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡πÉ‡∏´‡πâ</label>
          <label class="radio"><input type="radio" name="investMode" value="custom" /> ‡∏â‡∏±‡∏ô‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡πÉ‡∏à‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß</label>
        </div>
        <div id="customSymbols" class="hidden">
          <label for="symbols">‡πÉ‡∏™‡πà‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠ (‡∏Ñ‡∏±‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏à‡∏∏‡∏•‡∏†‡∏≤‡∏Ñ)</label>
          <input id="symbols" placeholder="‡πÄ‡∏ä‡πà‡∏ô SET:PTT, SET:BBL, ‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô ABC" />
        </div>
      </div>
    </form>
    <div class="modal-foot">
      <button class="ghost" id="cancelBtn">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
      <button class="btn" id="saveBtn">Save Goal</button>
    </div>
  </dialog>

  <!-- Edit Goal Modal (mock) -->
  <dialog id="editModal">
    <div class="modal-head">
      <strong>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢</strong>
      <button class="ghost" id="closeEdit">‡∏õ‡∏¥‡∏î</button>
    </div>
    <div class="modal-body">
      <div><label>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢</label><input id="eName" /></div>
      <div class="row" style="gap:12px">
        <div style="flex:1"><label>‡∏¢‡∏≠‡∏î‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ (‡∏ö‡∏≤‡∏ó)</label><input id="eTarget" type="number" min="0" /></div>
        <div style="flex:1">
          <label>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤</label>
          <div class="row" style="gap:8px">
            <input id="eDuration" type="number" min="1" step="1" style="flex:1" />
            <select id="eUnit" style="flex:1">
              <option value="day">‡∏ß‡∏±‡∏ô</option>
              <option value="week">‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</option>
              <option value="month">‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</option>
              <option value="year">‡∏õ‡∏µ</option>
            </select>
          </div>
        </div>
      </div>
      <div>
        <label>‡πÅ‡∏ú‡∏ô</label>
        <div class="radio-row" id="ePlanRow">
          <label class="radio"><input type="radio" name="ePlan" value="‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô" /> ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô</label>
          <label class="radio"><input type="radio" name="ePlan" value="‡∏•‡∏á‡∏ó‡∏∏‡∏ô" /> ‡∏•‡∏á‡∏ó‡∏∏‡∏ô</label>
        </div>
      </div>
      <div id="eInvestChoice" class="hidden">
        <label>‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô</label>
        <div class="radio-row">
          <label class="radio"><input type="radio" name="eInvestMode" value="recommend" /> ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</label>
          <label class="radio"><input type="radio" name="eInvestMode" value="custom" /> ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á</label>
        </div>
        <div id="eSymbolsWrap" class="hidden">
          <label>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏</label>
          <input id="eSymbols" placeholder="‡πÄ‡∏ä‡πà‡∏ô SET:PTT, AAPL" />
        </div>
      </div>
    </div>
    <div class="modal-foot">
      <button class="ghost" id="cancelEdit">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
      <button class="btn" id="saveEdit">Save Changes</button>
    </div>
  </dialog>

  <!-- Add Contribution Modal (mock) -->
  <dialog id="contribModal">
    <div class="modal-head">
      <strong>‡πÉ‡∏™‡πà‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏≠‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á</strong>
      <button class="ghost" id="closeContrib">‡∏õ‡∏¥‡∏î</button>
    </div>
    <div class="modal-body">
      <div class="row" style="gap:12px">
        <div style="flex:1"><label>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏ö‡∏≤‡∏ó)</label><input id="cAmount" type="number" min="1" placeholder="500" /></div>
        <div style="flex:1"><label>‡∏ó‡∏µ‡πà‡∏°‡∏≤</label>
          <select id="cSource">
            <option value="manual">manual</option>
            <option value="daily_leftover">daily_leftover</option>
            <option value="transfer_tx">transfer_tx</option>
          </select>
        </div>
      </div>
      <div class="muted">‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÇ‡∏°‡πÄ‡∏î‡∏• mock ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏à‡∏£‡∏¥‡∏á ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏ú‡∏•</div>
    </div>
    <div class="modal-foot">
      <button class="ghost" id="cancelContrib">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
      <button class="btn" id="saveContrib">Add</button>
    </div>
  </dialog>

  <aside class="drawer" id="detailDrawer" aria-hidden="true">
    <div class="drawer-head">
      <strong id="dName">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢</strong>
      <button class="ghost" id="closeDrawer">‡∏õ‡∏¥‡∏î</button>
    </div>
    <div class="drawer-body">
      <div class="kv"><div class="muted">‡∏¢‡∏≠‡∏î‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢</div><div id="dTarget">-</div></div>
      <div class="kv"><div class="muted">‡∏≠‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß</div><div id="dSaved">-</div></div>
      <div class="kv"><div class="muted">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤</div><div id="dProgress">-</div></div>
      <div class="kv"><div class="muted">‡∏ä‡πà‡∏ß‡∏á‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏°</div><div id="dPeriod">-</div></div>
      <div class="kv"><div class="muted">‡∏¢‡∏≠‡∏î‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏á</div><div id="dPerPeriod">-</div></div>
      <div class="kv"><div class="muted">‡πÅ‡∏ú‡∏ô</div><div id="dPlan"><span class="pill">-</span></div></div>
      <div class="kv" id="dInvestRow" style="display:none"><div class="muted">‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô</div><div id="dInvestMode"><span class="pill">-</span></div></div>
      <div class="kv" id="dSymbolsRow" style="display:none"><div class="muted">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏</div><div id="dSymbols">-</div></div>
      <div class="tip" id="dTip">‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏∞‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢</div>
    </div>
    <div class="drawer-foot">
      <button class="btn ghost" id="openContrib">+ ‡πÉ‡∏™‡πà‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏≠‡∏°</button>
      <button class="btn" id="openEdit">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢</button>
    </div>
  </aside>

  <script>
    const $ = s=>document.querySelector(s);
    const $$ = s=>document.querySelectorAll(s);

    const createBtn = $('#openCreate');
    const createModal = $('#createModal');
    const closeCreate = $('#closeCreate');
    const cancelBtn = $('#cancelBtn');
    const saveBtn = $('#saveBtn');
    const grid = $('#goalGrid');

    const planRow = $('#planRow');
    const investChoice = $('#investChoice');
    const customSymbols = $('#customSymbols');

    const drawer = $('#detailDrawer');
    const closeDrawer = $('#closeDrawer');
    const dName = $('#dName');
    const dTarget = $('#dTarget');
    const dSaved = $('#dSaved');
    const dProgress = $('#dProgress');
    const dPlan = $('#dPlan');
    const dTip = $('#dTip');
    const dInvestRow = $('#dInvestRow');
    const dInvestMode = $('#dInvestMode');
    const dSymbolsRow = $('#dSymbolsRow');
    const dSymbols = $('#dSymbols');
    const dPeriod = $('#dPeriod');
    const dPerPeriod = $('#dPerPeriod');

    const editModal = $('#editModal');
    const cancelEdit = $('#cancelEdit');
    const saveEdit = $('#saveEdit');
    const eName = $('#eName');
    const eTarget = $('#eTarget');
    const eDuration = $('#eDuration');
    const eUnit = $('#eUnit');
    const ePlanRow = $('#ePlanRow');
    const eInvestChoice = $('#eInvestChoice');
    const eSymbolsWrap = $('#eSymbolsWrap');
    const eSymbols = $('#eSymbols');

    const contribModal = $('#contribModal');
    const cancelContrib = $('#cancelContrib');
    const saveContrib = $('#saveContrib');
    const cAmount = $('#cAmount');
    const cSource = $('#cSource');

    let currentCard = null;

    createBtn.addEventListener('click', () => createModal.showModal());
    closeCreate.addEventListener('click', () => createModal.close());
    cancelBtn.addEventListener('click', () => createModal.close());

    planRow.addEventListener('change', ()=>{
      const val = (document.querySelector('input[name="plan"]:checked')||{}).value;
      if(val === '‡∏•‡∏á‡∏ó‡∏∏‡∏ô') investChoice.classList.remove('hidden'); else investChoice.classList.add('hidden');
    });
    investChoice.addEventListener('change', ()=>{
      const mode = (document.querySelector('input[name="investMode"]:checked')||{}).value;
      if(mode==='custom') customSymbols.classList.remove('hidden'); else customSymbols.classList.add('hidden');
    });

    function escapeHTML(str){return str.replace(/[&<>"]+/g, s => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;'}[s]));}
    function unitLabel(u){return u==='day'?'‡∏ß‡∏±‡∏ô':u==='week'?'‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå':u==='month'?'‡πÄ‡∏î‡∏∑‡∏≠‡∏ô':'‡∏õ‡∏µ'}
    function unitDays(u){return u==='day'?1:u==='week'?7:u==='month'?30:365}
    function perPeriodAmount(target,saved,duration){
      const remain = Math.max(0,target - saved);
      return duration>0 ? Math.ceil(remain / duration) : remain;
    }

    function refreshCardUI(card){
      const saved = Number(card.dataset.saved||0);
      const target = Number(card.dataset.target||0);
      const duration = Number(card.dataset.duration||0);
      const unit = card.dataset.unit||'month';
      const progress = target>0 ? Math.round(Math.max(0, Math.min(100, (saved/target)*100))) : 0;
      card.dataset.progress = progress;
      const bar = card.querySelector('.bar'); if(bar) bar.style.width = progress + '%';
      const sub = card.querySelector('.card-sub');
      if(sub){ sub.textContent = `‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏•‡πâ‡∏ß ${saved.toLocaleString()} / ${target.toLocaleString()} ‡∏ö‡∏≤‡∏ó ‚Ä¢ ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${duration} ${unitLabel(unit)}`; }
      // per period
      const perPeriod = perPeriodAmount(target,saved,duration);
      const row = card.querySelectorAll('.row .muted');
      if(row[0]) row[0].textContent = `‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏°‡∏ó‡∏∏‡∏Å: ${unitLabel(unit)} ‚Ä¢ ~ ${perPeriod.toLocaleString()} ‡∏ö‡∏≤‡∏ó/${unitLabel(unit)}`;
      const approxPerDay = Math.ceil(perPeriod / unitDays(unit));
      if(row[1]) row[1].textContent = `‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì ~ ${approxPerDay.toLocaleString()} ‡∏ö‡∏≤‡∏ó/‡∏ß‡∏±‡∏ô`;
      card.dataset.perperiod = perPeriod;
      card.dataset.perday = approxPerDay;
    }

    function openDetails(card){
      currentCard = card;
      const name = card.dataset.name || '-';
      const saved = Number(card.dataset.saved||0);
      const target = Number(card.dataset.target||0);
      const duration = Number(card.dataset.duration||0);
      const unit = card.dataset.unit || 'month';
      const plan = card.dataset.plan || '-';
      const progress = Number(card.dataset.progress||0);
      const investMode = card.dataset.investmode || 'none';
      const symbols = card.dataset.symbols || '';
      const perPeriod = Number(card.dataset.perperiod|| perPeriodAmount(target,saved,duration));

      dName.textContent = name;
      dTarget.textContent = target.toLocaleString() + ' ‡∏ö‡∏≤‡∏ó';
      dSaved.textContent = saved.toLocaleString() + ' ‡∏ö‡∏≤‡∏ó';
      dProgress.textContent = progress + ' %';
      dPlan.innerHTML = `<span class="pill">${escapeHTML(plan)}</span>`;
      dPeriod.textContent = `${duration} ${unitLabel(unit)}`;
      dPerPeriod.textContent = `${perPeriod.toLocaleString()} ‡∏ö‡∏≤‡∏ó/${unitLabel(unit)}`;

      if(plan === '‡∏•‡∏á‡∏ó‡∏∏‡∏ô'){
        dInvestRow.style.display = 'grid';
        dInvestMode.innerHTML = `<span class="pill">${investMode==='recommend' ? '‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥' : '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á'}</span>`;
        if(investMode==='custom' && symbols){ dSymbolsRow.style.display='grid'; dSymbols.textContent = symbols; }
        else { dSymbolsRow.style.display='none'; dSymbols.textContent='-'; }
      } else { dInvestRow.style.display = 'none'; dSymbolsRow.style.display='none'; }

      const totalDays = duration * unitDays(unit);
      if(target>0){
        const remain = Math.max(0, target - saved);
        const needPerPeriod = perPeriodAmount(target,saved,duration);
        dTip.textContent = remain===0 ? '‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏°‡∏≤‡∏Å! ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß' : `‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${remain.toLocaleString()} ‡∏ö‡∏≤‡∏ó (${totalDays} ‡∏ß‡∏±‡∏ô) ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏° ~ ${needPerPeriod.toLocaleString()} ‡∏ö‡∏≤‡∏ó/‡∏ï‡πà‡∏≠ ${unitLabel(unit)}`;
      } else { dTip.textContent = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏£‡∏ö‡∏û‡∏≠'; }

      drawer.classList.add('open');
      drawer.setAttribute('aria-hidden','false');
    }

    $('#closeDrawer').addEventListener('click', ()=>{
      drawer.classList.remove('open');
      drawer.setAttribute('aria-hidden','true');
      currentCard = null;
    });

    grid.addEventListener('click', (e)=>{
      const card = e.target.closest('.card');
      if(!card) return;
      if(e.target.matches('[data-action="delete"]')){ card.remove(); return; }
      openDetails(card);
    });

    $('#saveBtn').addEventListener('click', () => {
      const name = $('#goalName').value.trim();
      const amt = parseFloat($('#goalAmount').value || '0');
      const duration = parseInt($('#goalDuration').value || '0',10);
      const unit = $('#goalUnit').value;
      const plan = (document.querySelector('input[name="plan"]:checked')||{}).value || '‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô';
      if(!name || !amt || !duration){return;}

      let investMode = 'none';
      let symbols = '';
      if(plan==='‡∏•‡∏á‡∏ó‡∏∏‡∏ô'){
        investMode = (document.querySelector('input[name="investMode"]:checked')||{}).value || 'recommend';
        symbols = ($('#symbols')?.value || '').trim();
      }

      const card = document.createElement('article');
      card.className = 'card';
      Object.assign(card.dataset,{name, saved:0, target:amt, duration, unit, plan, investmode:investMode});
      if(symbols) card.dataset.symbols = symbols;

      card.innerHTML = `
        <div class="row">
          <div style="display:flex;align-items:center;gap:10px">
            <div style="font-size:22px">${plan==='‡∏•‡∏á‡∏ó‡∏∏‡∏ô' ? 'üìà' : 'üí∞'}</div>
            <div>
              <p class="goal-title">${escapeHTML(name)}</p>
              <div class="muted card-sub">‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏•‡πâ‡∏ß 0 / ${amt.toLocaleString()} ‡∏ö‡∏≤‡∏ó ‚Ä¢ ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ${duration} ${unitLabel(unit)}</div>
            </div>
          </div>
          <div class="actions">
            <button class="ghost edit-btn" data-action="edit">Edit</button>
            <button class="ghost danger" data-action="delete">Delete</button>
          </div>
        </div>
        <div class="progress"><div class="bar" style="width:0%"></div></div>
        <div class="row">
          <div class="muted">‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏°‡∏ó‡∏∏‡∏Å: ${unitLabel(unit)} ‚Ä¢ ~ 0 ‡∏ö‡∏≤‡∏ó/${unitLabel(unit)}</div>
          <div class="muted">‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì ~ 0 ‡∏ö‡∏≤‡∏ó/‡∏ß‡∏±‡∏ô</div>
        </div>`;

      grid.prepend(card);
      refreshCardUI(card);
      createModal.close();
      $('#goalName').value='';
      $('#goalAmount').value='';
      $('#goalDuration').value='';
      investChoice.classList.add('hidden');
      customSymbols.classList.add('hidden');
    });

    // Edit flow
    $('#openEdit').addEventListener('click', ()=>{
      if(!currentCard) return;
      eName.value = currentCard.dataset.name || '';
      eTarget.value = currentCard.dataset.target || '0';
      eDuration.value = currentCard.dataset.duration || '1';
      eUnit.value = currentCard.dataset.unit || 'month';
      const plan = currentCard.dataset.plan || '‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô';
      (editModal.querySelector(`input[name="ePlan"][value="${plan}"]`)||editModal.querySelector('input[name="ePlan"]').checked);
      if(plan==='‡∏•‡∏á‡∏ó‡∏∏‡∏ô') eInvestChoice.classList.remove('hidden'); else eInvestChoice.classList.add('hidden');
      const mode = currentCard.dataset.investmode || 'recommend';
      (editModal.querySelector(`input[name="eInvestMode"][value="${mode}"]`)||editModal.querySelector('input[name="eInvestMode"]').checked);
      if(mode==='custom'){ eSymbolsWrap.classList.remove('hidden'); eSymbols.value = currentCard.dataset.symbols||''; } else { eSymbolsWrap.classList.add('hidden'); eSymbols.value=''; }
      editModal.showModal();
    });

    ePlanRow.addEventListener('change', ()=>{
      const plan = (editModal.querySelector('input[name="ePlan"]:checked')||{}).value;
      if(plan==='‡∏•‡∏á‡∏ó‡∏∏‡∏ô') eInvestChoice.classList.remove('hidden'); else eInvestChoice.classList.add('hidden');
    });

    eInvestChoice.addEventListener('change', ()=>{
      const mode = (editModal.querySelector('input[name="eInvestMode"]:checked')||{}).value;
      if(mode==='custom') eSymbolsWrap.classList.remove('hidden'); else eSymbolsWrap.classList.add('hidden');
    });

    $('#saveEdit').addEventListener('click', ()=>{
      if(!currentCard) return;
      currentCard.dataset.name = eName.value.trim() || currentCard.dataset.name;
      currentCard.dataset.target = parseFloat(eTarget.value||currentCard.dataset.target);
      currentCard.dataset.duration = parseInt(eDuration.value||currentCard.dataset.duration,10);
      currentCard.dataset.unit = eUnit.value;
      const plan = (editModal.querySelector('input[name="ePlan"]:checked')||{}).value || currentCard.dataset.plan;
      currentCard.dataset.plan = plan;
      if(plan==='‡∏•‡∏á‡∏ó‡∏∏‡∏ô'){
        const mode = (editModal.querySelector('input[name="eInvestMode"]:checked')||{}).value || 'recommend';
        currentCard.dataset.investmode = mode;
        const sym = (eSymbols.value||'').trim();
        if(sym) currentCard.dataset.symbols = sym; else delete currentCard.dataset.symbols;
      } else { currentCard.dataset.investmode = 'none'; delete currentCard.dataset.symbols; }
      currentCard.querySelector('.goal-title').textContent = currentCard.dataset.name;
      refreshCardUI(currentCard);
      openDetails(currentCard);
      editModal.close();
    });

    // Contrib flow
    $('#openContrib').addEventListener('click', ()=>{ if(!currentCard) return; $('#cAmount').value=''; contribModal.showModal(); });
    $('#cancelContrib').addEventListener('click', ()=>contribModal.close());
    $('#saveContrib').addEventListener('click', ()=>{
      if(!currentCard) return;
      const add = Math.max(0, parseFloat($('#cAmount').value||'0'));
      if(add<=0){ contribModal.close(); return; }
      currentCard.dataset.saved = Number(currentCard.dataset.saved||0) + add;
      refreshCardUI(currentCard);
      openDetails(currentCard);
      contribModal.close();
    });
  </script>
</body>
</html>