// ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå (‡πÉ‡∏´‡∏°‡πà) src/services/log.service.ts
import { Request } from 'express';
import { query } from '../index'; // import ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô query ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

// 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á Interface ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Options
interface LogOptions {
  user_id: number; // üëà User ‡∏ó‡∏µ‡πà "‡∏ñ‡∏π‡∏Å" ‡∏Å‡∏£‡∏∞‡∏ó‡∏≥ (Affected User)
  action: string; // üëà ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥ ‡πÄ‡∏ä‡πà‡∏ô 'LOGIN_SUCCESS', 'UPDATE_PROFILE'
  
  // Actor: ‡∏ú‡∏π‡πâ‡∏Å‡∏£‡∏∞‡∏ó‡∏≥ (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô user ‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô, admin, ‡∏´‡∏£‡∏∑‡∏≠ system)
  actor_id?: number | null;
  actor_type?: 'user' | 'admin' | 'system' | 'api';

  // Request Details (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  req?: Request;

  // Context: ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ß‡πà‡∏≤‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£ ‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô
  table_name?: string | null;
  record_id?: string | number | null;
  description?: string | null;

  // Data Changes: ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô-‡∏´‡∏•‡∏±‡∏á
  old_value?: object | null;
  new_value?: object | null;
  changed_fields?: object | null; // (‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á)
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Log ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á `log`
 */
export async function logActivity(options: LogOptions): Promise<void> {
  // 2. ‡πÅ‡∏¢‡∏Å‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  const {
    user_id,
    action,
    actor_id = null, // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏°‡∏≤ ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô null
    actor_type = 'user', // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    req = null, // ‡∏£‡∏±‡∏ö request object ‡∏°‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    table_name = null,
    record_id = null,
    description = null,
    old_value = null,
    new_value = null,
    changed_fields = null,
  } = options;

  console.log('--- 1. logActivity CALLED ---');
  console.log('--- ACTION:', options.action);

  // 3. ‡∏î‡∏∂‡∏á IP ‡πÅ‡∏•‡∏∞ User Agent ‡∏à‡∏≤‡∏Å Request (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  const ip_address = req ? req.ip : null;
  const user_agent = req ? req.get('User-Agent') : null;

  // 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á SQL Query
  const sql = `
    INSERT INTO log 
      (user_id, actor_id, actor_type, table_name, record_id, 
       action, old_value, new_value, changed_fields, 
       ip_address, user_agent, description)
    VALUES 
      (?, ?, ?, ?, ?, ?, ?, ?, ?, INET6_ATON(?), ?, ?)
  `;

  // ‚ùóÔ∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: INET6_ATON(?) ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏õ‡∏•‡∏á IP (v6) ‡πÄ‡∏õ‡πá‡∏ô INT ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô VARBINARY(16)
  // ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ IPv4 ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô String ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô schema ‡πÅ‡∏•‡∏∞ query ‡∏Ñ‡∏£‡∏±‡∏ö
  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡πà‡∏≤‡∏¢ ‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ VARCHAR(45) ‡πÅ‡∏ó‡∏ô VARBINARY(16) ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ INET6_ATON
  
  const params = [
    user_id,
    actor_id,
    actor_type,
    table_name,
    record_id ? String(record_id) : null,
    action,
    old_value ? JSON.stringify(old_value) : null,
    new_value ? JSON.stringify(new_value) : null,
    changed_fields ? JSON.stringify(changed_fields) : null,
    ip_address,
    user_agent,
    description
  ];

  console.log('--- 2. EXECUTING SQL ---', sql.substring(0, 100) + '...');
  console.log('--- PARAMS:', params);

  // 5. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Log ‡πÅ‡∏•‡∏∞‡∏î‡∏±‡∏Å‡∏à‡∏±‡∏ö Error
  try {
    await query(sql, params);
    console.log('--- 3. LOG INSERTED SUCCESSFULLY! ---');
  } catch (err) {
    console.error('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!');
    console.error('--- ‚ùå CRITICAL: FAILED TO WRITE LOG ---');
    console.error(err);
    console.error('!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!');
    console.error('CRITICAL: Failed to write to log table:', err);
  }
}